# Highlight Analytics Dataset Generator

This Python script generates a synthetic dataset for analytics and reporting purposes, tailored to simulate the data requirements of a **Senior Analyst / Analytics Engineer** role. The dataset is designed to be used for creating dashboards in tools like **Power BI** or for practicing data analysis and visualization skills.

---

## Features

- **Realistic Data**: Simulates customer, product, transaction, marketing, operational, and financial data.
- **Customizable Rows**: Easily adjust the number of rows in the dataset by modifying the `num_rows` parameter.
- **Wide Range of Metrics**: Includes metrics for customer segmentation, product engagement, financial performance, marketing campaigns, operational efficiency, and team collaboration.
- **CSV Output**: Saves the generated dataset as a CSV file (`highlight_analytics.csv`) for easy integration with analytics tools.

---

## Dataset Columns

### **Customer Information**
- `CustomerID`: Unique identifier for each customer.
- `CustomerName`: Name of the customer.
- `CustomerSegment`: Segment (e.g., "Enterprise", "SMB", "Startup").
- `Region`: Geographic region (e.g., "North America", "Europe").
- `Industry`: Industry type (e.g., "Consumer Goods", "Technology").
- `AcquisitionChannel`: How the customer was acquired (e.g., "Organic", "Paid Ads").

### **Product Engagement**
- `ProductID`: Unique identifier for the product.
- `ProductCategory`: Category of the product (e.g., "Beverages", "Personal Care").
- `EngagementScore`: A score (0–100) representing customer engagement.
- `FeedbackSubmitted`: Boolean indicating whether feedback was submitted.
- `FeedbackScore`: Average feedback score (1–5).

### **Transaction Data**
- `TransactionID`: Unique identifier for each transaction.
- `TransactionDate`: Date of the transaction.
- `TransactionAmount`: Amount spent by the customer.
- `PaymentMethod`: Payment method used (e.g., "Credit Card", "PayPal").
- `DiscountApplied`: Boolean indicating if a discount was applied.

### **Marketing Metrics**
- `CampaignID`: Unique identifier for the marketing campaign.
- `CampaignType`: Type of campaign (e.g., "Email", "Social Media").
- `Impressions`: Number of impressions generated by the campaign.
- `Clicks`: Number of clicks generated by the campaign.
- `ConversionRate`: Conversion rate (Clicks/Impressions).

### **Operational Metrics**
- `FulfillmentTime`: Time taken to fulfill a product shipment (in days).
- `LogisticsCost`: Cost of shipping the product.
- `ReturnRate`: Percentage of products returned by customers.

### **Financial Metrics**
- `Revenue`: Revenue generated from the customer.
- `ProfitMargin`: Profit margin percentage.
- `LifetimeValue`: Customer lifetime value.

### **HubSpot CRM Data**
- `LeadSource`: Source of the lead (e.g., "Website", "Event").
- `LeadScore`: Score assigned to the lead (0–100).
- `DealStage`: Current stage of the deal (e.g., "Prospecting", "Closed Won").
- `LastContactDate`: Date of the last contact with the customer.

### **Data Pipeline Metrics**
- `PipelineID`: Unique identifier for the data pipeline.
- `PipelineTool`: Tool used for the pipeline (e.g., "Fivetran", "dbt").
- `PipelineStatus`: Status of the pipeline (e.g., "Running", "Failed").
- `DataLatency`: Time delay in data availability (in minutes).

### **Team Collaboration Metrics**
- `TeamMemberID`: Unique identifier for the team member.
- `Department`: Department of the team member (e.g., "Finance", "Marketing").
- `TasksCompleted`: Number of tasks completed by the team member.
- `CollaborationScore`: Score (0–100) representing collaboration effectiveness.

---

## How to Use

### Prerequisites
- Python 3.7 or higher
- Required libraries: `pandas`, `numpy`, `faker`

Install the required libraries:
```bash
pip install pandas numpy faker
```

### Running the Script
1. Clone this repository or download the script.
2. Open the script in your Python environment.
3. Run the script:
   ```bash
   python Analytics\ Engineer\ -\ Highlight.py
   ```
4. The dataset will be saved as highlight_analytics.csv in the current directory.

---

## Customization

- **Number of Rows**: Modify the `num_rows` parameter in the `generate_dataset` function to generate a dataset of the desired size.
  ```python
  dataset = generate_dataset(num_rows=100000)
  ```
- **Column Values**: Update the predefined lists (e.g., `customer_segments`, `regions`, `industries`) to customize the dataset further.

---

## Example Use Cases

1. **Power BI Dashboards**:
   - Import the dataset into Power BI to create visualizations for customer insights, product engagement, financial performance, and operational metrics.

2. **Data Analysis**:
   - Use the dataset to practice SQL queries, Python data analysis, or machine learning workflows.

3. **Interview Projects**:
   - Showcase your data engineering and analytics skills by building dashboards or reports based on this dataset.

---

## Suggested Power BI Dashboard Pages

1. **Customer Insights**:
   - Visualize customer segmentation, acquisition channels, and lifetime value.

2. **Product Engagement**:
   - Analyze engagement scores, feedback trends, and top-performing products.

3. **Financial Performance**:
   - Track revenue, profit margins, and marketing campaign performance.

4. **Operational Metrics**:
   - Monitor fulfillment times, pipeline performance, and team collaboration.
